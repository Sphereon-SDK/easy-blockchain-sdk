<?php
/**
 * IdApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Sphereon\SDK\Blockchain\Easy
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Easy Blockchain API
 *
 * The Easy Blockchain API is an easy to use API to store related entries within chains. Currently it stores entries using a Factom, Ethereum or Multichain blockchain.   For full API documentation please visit: https://docs.sphereon.com/api/easy-blockchain/0.10/html   Interactive testing: A web based test console is available in the Sphereon API store at: https://store.sphereon.com
 *
 * OpenAPI spec version: 0.10
 * Contact: dev@sphereon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Sphereon\SDK\Blockchain\Easy;

use \Sphereon\SDK\Blockchain\Easy\Configuration;
use \Sphereon\SDK\Blockchain\Easy\ApiClient;
use \Sphereon\SDK\Blockchain\Easy\ApiException;
use \Sphereon\SDK\Blockchain\Easy\ObjectSerializer;

/**
 * IdApiTest Class Doc Comment
 *
 * @category Class
 * @package  Sphereon\SDK\Blockchain\Easy
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class IdApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for chainIdExists
     *
     * Determine chain id exists.
     *
     */
    public function testChainIdExists()
    {
    }

    /**
     * Test case for determineChainId
     *
     * Predetermine id of chain.
     *
     */
    public function testDetermineChainId()
    {
    }

    /**
     * Test case for determineEntryId
     *
     * Predetermine id of an entry.
     *
     */
    public function testDetermineEntryId()
    {
    }

    /**
     * Test case for entryIdExists
     *
     * Determine entry id exists.
     *
     */
    public function testEntryIdExists()
    {
    }
}
